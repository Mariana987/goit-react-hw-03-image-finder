{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","services/imageApi.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","pictureName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmitProp","toast","error","className","onSubmit","this","type","autoComplete","placeholder","name","onChange","Component","ImageGalleryItem","webformatURL","onOpen","largeImageURL","onClick","src","alt","fetchImages","baseApi","myKey","page","fetch","then","response","json","data","hits","Spinner","color","height","width","timeout","LoadMoreBtn","onLoadMoreBtn","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","ImageGallery","status","pictures","largeUrl","showModal","getPictures","arr","newArr","map","picture","id","toggleModal","takeModalPicture","url","prevProps","prevState","length","catch","scrollTo","top","documentElement","scrollHeight","behavior","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68a424f1.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        pictureName: '',\r\n    };\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ pictureName: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.pictureName.trim() === '') {\r\n            toast.error(\"enter something!\");\r\n            return\r\n        }\r\n\r\n        this.props.onSubmitProp(this.state.pictureName);\r\n        this.setState({ pictureName: '' });\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Search images and photos\"\r\n                        name=\"pictureName\"\r\n                        value={this.state.pictureName}\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({ webformatURL, onOpen, largeImageURL }) {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" onClick={() =>\r\n            onOpen(largeImageURL)}>\r\n            <img src={webformatURL}\r\n                alt=\"\"\r\n                className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    onOpen: PropTypes.func,\r\n    largeImageURL: PropTypes.string,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import PropTypes from \"prop-types\";\r\n// export default function ImageGalleryItem({\r\n//     webformatURL,\r\n//     onOpen,\r\n//     largeImageURL,\r\n// }) {\r\n//     return (\r\n//         <li className=\"ImageGalleryItem\" onClick={() => onOpen(largeImageURL)}>\r\n//             <img src={webformatURL} alt=\"nice\" className=\"ImageGalleryItem-image\" />\r\n//         </li>\r\n//     );\r\n// }\r\n\r\n// ImageGalleryItem.propTypes = {\r\n//     webformatURL: PropTypes.string,\r\n//     onOpen: PropTypes.func,\r\n//     largeImageURL: PropTypes.string,\r\n// };","function fetchImages(pictureName, baseApi, myKey, page) {\r\n    return fetch(`${baseApi}?q=${pictureName}&page=${page}&key=${myKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response =>\r\n            response.json())\r\n        .then(data => {\r\n            return data.hits\r\n        })\r\n}\r\nexport default fetchImages","\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div>\r\n                <Loader type=\"Circles\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} />\r\n                Loading...\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import PropTypes from \"prop-types\";\r\nexport default function LoadMoreBtn({ onLoadMoreBtn }) {\r\n    return (\r\n        <div className=\"load_more\">\r\n            <button type=\"submit\" className=\"Button \" onClick={onLoadMoreBtn}>\r\n                Load More\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nLoadMoreBtn.propTypes = {\r\n    onLoadMoreBtn: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.code === \"Escape\") {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = (event) => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n};","import { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport fetchImages from '../../services/imageApi';\r\nimport Spinner from '../Loader/Loader'\r\nimport LoadMoreBtn from '../Button'\r\nimport Modal from '../Modal'\r\n\r\n\r\nexport default class ImageGallery extends Component {\r\n    state = {\r\n        pictureName: null,\r\n        error: null,\r\n        status: 'idle',\r\n        pictures: [],\r\n        baseApi: \"https://pixabay.com/api/\",\r\n        myKey: '23171615-fcdc729843fe7af43a640cf8d',\r\n        page: 1,\r\n        largeUrl: \" \",\r\n        showModal: false,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { baseApi, myKey, page } = this.state;\r\n        const { pictureName } = this.props;\r\n\r\n        if (prevProps.pictureName !== this.props.pictureName) {\r\n\r\n            this.setState({ status: 'pending' });\r\n            this.setState({ pictures: [] });\r\n\r\n\r\n            fetchImages(pictureName, baseApi, myKey, page)\r\n                .then((pictures) => {\r\n                    if (pictures.length === 0) {\r\n                        return this.setState({ status: 'rejected' });\r\n\r\n                    }\r\n                    this.setState({ page: 1 })\r\n                    this.getPictures(pictures);\r\n                })\r\n\r\n                .then(this.setState({ status: 'resolved' }))\r\n                .catch((error) => this.setState({ error, status: 'rejected' }));\r\n\r\n\r\n        }\r\n        else if (prevState.page !== this.state.page) {\r\n            this.setState({ status: 'pending' });\r\n\r\n            fetchImages(pictureName, baseApi, myKey, page)\r\n                .then((pictures) => this.getPictures(pictures))\r\n                .then(this.setState({ status: 'resolved' }))\r\n                .then(() => window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                })\r\n                )\r\n                .catch((error) => this.setState({ error, status: 'rejected' }))\r\n        }\r\n    }\r\n\r\n\r\n    getPictures = (arr) => {\r\n        const newArr = arr.map((picture) => {\r\n            return {\r\n                id: picture.id,\r\n                webformatURL: picture.webformatURL,\r\n                largeImageURL: picture.largeImageURL\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            pictures: [...this.state.pictures, ...newArr],\r\n        });\r\n    };\r\n    onLoadMoreBtn = () => {\r\n        this.setState({\r\n            page: this.state.page + 1,\r\n        })\r\n    }\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }))\r\n    };\r\n    takeModalPicture = (url) => {\r\n        this.setState({ largeUrl: url, showModal: true })\r\n    };\r\n\r\n    render() {\r\n\r\n        const { pictures, status, largeUrl, showModal } = this.state\r\n\r\n        if (status === 'idle') {\r\n            return <h1 className=\"title\"> Enter what are you looking for.</h1>\r\n        }\r\n        if (status === 'pending') {\r\n            return <Spinner />\r\n\r\n        }\r\n        if (status === 'rejected') {\r\n            return <h1 className=\"title\">\r\n                By searching \"{this.props.pictureName}\" nothing found, sorry.<br />\r\n                Try enter something else\r\n            </h1>\r\n        }\r\n        if (status === 'resolved') {\r\n            return (\r\n                <div>\r\n                    <ul className=\"ImageGallery\">\r\n                        {pictures.map((picture) => (\r\n                            <ImageGalleryItem\r\n                                key={picture.id}\r\n                                webformatURL={picture.webformatURL}\r\n                                largeImageURL={picture.largeImageURL}\r\n                                onOpen={this.takeModalPicture}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                    {showModal && (\r\n                        <Modal onClose={this.toggleModal}>\r\n                            <img src={largeUrl} alt=\"modal-img\" />\r\n                        </Modal>\r\n                    )\r\n                    }\r\n                    <LoadMoreBtn onLoadMoreBtn={this.onLoadMoreBtn} />\r\n                </div >\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nImageGallery.propTypes = {\r\n    inputValue: PropTypes.string,\r\n};","import { Component } from 'react';\nimport './App.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar'\nimport ImageGallery from './components/ImageGallery';\n\n\n\nexport default class App extends Component {\n  state = {\n    pictureName: '',\n  };\n\n  handleFormSubmit = pictureName => {\n    this.setState({ pictureName })\n  }\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSubmitProp={this.handleFormSubmit} />\n        <ImageGallery pictureName={this.state.pictureName} />\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}